local UserInputService = game:GetService("UserInputService")
local Players = game:GetService("Players")
local player = Players.LocalPlayer
local playerGui = player:WaitForChild("PlayerGui")

-- ScreenGui
local screenGui = Instance.new("ScreenGui")
screenGui.Name = "MainGUI"
screenGui.ResetOnSpawn = false
screenGui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling
screenGui.Parent = playerGui

-- Ana Frame (ortada ve sürüklenebilir)
local mainFrame = Instance.new("Frame")
mainFrame.Size = UDim2.new(0, 240, 0, 120)
mainFrame.Position = UDim2.new(0.5, -120, 0.5, -60)
mainFrame.BackgroundColor3 = Color3.fromRGB(25, 25, 25)
mainFrame.Active = true
mainFrame.Draggable = true
mainFrame.Parent = screenGui

Instance.new("UICorner", mainFrame).CornerRadius = UDim.new(0, 8)
local stroke = Instance.new("UIStroke", mainFrame)
stroke.Thickness = 1
stroke.Color = Color3.fromRGB(255, 255, 255)
stroke.Transparency = 0.2

local padding = Instance.new("UIPadding", mainFrame)
padding.PaddingTop = UDim.new(0, 6)
padding.PaddingLeft = UDim.new(0, 6)
padding.PaddingRight = UDim.new(0, 6)

local layout = Instance.new("UIListLayout", mainFrame)
layout.Padding = UDim.new(0, 5)
layout.FillDirection = Enum.FillDirection.Vertical
layout.SortOrder = Enum.SortOrder.LayoutOrder
layout.HorizontalAlignment = Enum.HorizontalAlignment.Center

-- Main başlığı
local mainLabel = Instance.new("TextLabel")
mainLabel.Size = UDim2.new(1, 0, 0, 22)
mainLabel.BackgroundTransparency = 1
mainLabel.Font = Enum.Font.GothamBold
mainLabel.TextSize = 16
mainLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
mainLabel.Text = "Main"
mainLabel.TextXAlignment = Enum.TextXAlignment.Center
mainLabel.Parent = mainFrame

-- Super Jump butonu (panelin solunda ve ortalanmış)
local superJumpBtn = Instance.new("TextButton")
superJumpBtn.Size = UDim2.new(0, 100, 0, 32)
superJumpBtn.Position = UDim2.new(0, 10, 0.5, -16)
superJumpBtn.AnchorPoint = Vector2.new(0, 0.5)
superJumpBtn.BackgroundColor3 = Color3.fromRGB(60, 180, 90)
superJumpBtn.Font = Enum.Font.GothamBold
superJumpBtn.TextSize = 13
superJumpBtn.TextColor3 = Color3.new(1, 1, 1)
superJumpBtn.Text = "Super Jump: KAPALI"
superJumpBtn.Parent = mainFrame
Instance.new("UICorner", superJumpBtn).CornerRadius = UDim.new(0, 6)

-- Super Jump kodu
local superJumpActive = false
local jumpPower = 200
local canDoubleJump = false
local hasDoubleJumped = false

superJumpBtn.MouseButton1Click:Connect(function()
    superJumpActive = not superJumpActive
    if superJumpActive then
        superJumpBtn.Text = "Super Jump: AÇIK"
        superJumpBtn.BackgroundColor3 = Color3.fromRGB(60, 200, 90)
        local char = player.Character
        if char and char:FindFirstChild("Humanoid") then
            char.Humanoid.JumpPower = jumpPower
        end
    else
        superJumpBtn.Text = "Super Jump: KAPALI"
        superJumpBtn.BackgroundColor3 = Color3.fromRGB(200, 60, 60)
        local char = player.Character
        if char and char:FindFirstChild("Humanoid") then
            char.Humanoid.JumpPower = 50
        end
    end
end)

-- Çift zıplama
UserInputService.InputBegan:Connect(function(input, processed)
    if not superJumpActive then return end
    if processed then return end
    if input.KeyCode == Enum.KeyCode.Space then
        local char = player.Character
        if char and char:FindFirstChild("Humanoid") then
            if not canDoubleJump and char.Humanoid:GetState() == Enum.HumanoidStateType.Freefall then
                char.Humanoid:ChangeState(Enum.HumanoidStateType.Jumping)
                hasDoubleJumped = true
            end
        end
    end
end)

player.CharacterAdded:Connect(function(char)
    char:WaitForChild("Humanoid")
    if superJumpActive then
        char.Humanoid.JumpPower = jumpPower
    else
        char.Humanoid.JumpPower = 50
    end
end)

-- Zıplama kontrolü
if player.Character and player.Character:FindFirstChild("Humanoid") then
    player.Character.Humanoid.StateChanged:Connect(function(old, new)
        if not superJumpActive then return end
        if new == Enum.HumanoidStateType.Jumping then
            canDoubleJump = true
            hasDoubleJumped = false
        elseif new == Enum.HumanoidStateType.Freefall then
            if hasDoubleJumped then
                canDoubleJump = false
            end
        elseif new == Enum.HumanoidStateType.Landed then
            canDoubleJump = false
            hasDoubleJumped = false
        end
    end)
end
