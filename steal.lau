local Rayfield = loadstring(game:HttpGet('https://sirius.menu/rayfield'))()

local Window = Rayfield:CreateWindow({
    Name = "Steal A Brainrot",
    LoadingTitle = "Loading...",
    LoadingSubtitle = "Made by @c9xxi",
    ConfigurationSaving = {
        Enabled = false,
        FileName = "OrnekGUIConfig"
    }
})

local Tab = Window:CreateTab("Main", 4483362458)

local AntiTab = Window:CreateTab("Anti", 6031075938)

local EspTab = Window:CreateTab("Esp", 6031075938)

local superJumpActive = false
local godModeActive = false

local player = game.Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()
local humanoid = character:WaitForChild("Humanoid")

local function updateHumanoid()
    character = player.Character or player.CharacterAdded:Wait()
    humanoid = character:WaitForChild("Humanoid")
end

-- Super Jump Sistemi
local boostedJump = 75
local normalJump = 50
local isEnabled = false
local jumpConnection = nil

-- Zƒ±plama g√ºc√ºn√º ayarla
local function applyJumpPower(humanoid)
    if humanoid then
        humanoid.UseJumpPower = true
        humanoid.JumpPower = isEnabled and boostedJump or normalJump
    end
end

-- Infinite jump sistemi (hi√ßbir y√ºkseklik limiti yok)
local function setupInfiniteJump(humanoid)
    if jumpConnection then
        jumpConnection:Disconnect()
        jumpConnection = nil
    end
    if isEnabled then
        jumpConnection = game:GetService("UserInputService").JumpRequest:Connect(function()
            if isEnabled and humanoid then
                humanoid:ChangeState(Enum.HumanoidStateType.Jumping)
            end
        end)
    end
end

local function onCharacterAdded(character)
    local humanoid = character:WaitForChild("Humanoid")
    applyJumpPower(humanoid)
    setupInfiniteJump(humanoid)
end

player.CharacterAdded:Connect(onCharacterAdded)

if player.Character then
    onCharacterAdded(player.Character)
end

Tab:CreateToggle({
    Name = "Super Jump",
    CurrentValue = false,
    Flag = "SuperJumpToggle",
    Callback = function(state)
        isEnabled = state
        print("Super Jump:", state)
        local character = player.Character
        if character then
            local humanoid = character:FindFirstChildOfClass("Humanoid")
            if humanoid then
                applyJumpPower(humanoid)
                setupInfiniteJump(humanoid)
            end
        end
        if not state then
            if jumpConnection then
                jumpConnection:Disconnect()
                jumpConnection = nil
            end
        end
    end
})

-- God Mod baƒülantƒ± y√∂netimi
local godModeConn = nil

Tab:CreateToggle({
    Name = "God Mod",
    CurrentValue = false,
    Flag = "GodModToggle",
    Callback = function(Value)
        godModeActive = Value
        local player = game.Players.LocalPlayer
        local function setGodMode(state)
            local character = player.Character or player.CharacterAdded:Wait()
            local humanoid = character:FindFirstChildOfClass("Humanoid")
            if humanoid then
                if state then
                    humanoid.Health = math.huge
                    humanoid.MaxHealth = math.huge
                    if godModeConn then godModeConn:Disconnect() end
                    godModeConn = humanoid.HealthChanged:Connect(function()
                        if godModeActive then
                            humanoid.Health = math.huge
                        end
                    end)
                else
                    if godModeConn then godModeConn:Disconnect() end
                    godModeConn = nil
                    humanoid.MaxHealth = 100
                    humanoid.Health = 100
                end
            end
        end
        setGodMode(Value)
        if not _G.GodModCharConn then
            _G.GodModCharConn = player.CharacterAdded:Connect(function()
                if Value then
                    setGodMode(true)
                end
            end)
        end
    end
})

-- Geli≈ümi≈ü ESP fonksiyonlarƒ±
local Players = game:GetService("Players")
local localPlayer = Players.LocalPlayer
local ESPConnections = {}
local ESPActive = false

local function createESP(player)
    if player == localPlayer then return end

    local function onCharacterAdded(character)
        local head = character:WaitForChild("Head", 5)
        if not head then return end

        -- Eski ESP'leri temizle
        if head:FindFirstChild("ESP_Name") then head:FindFirstChild("ESP_Name"):Destroy() end
        if character:FindFirstChild("ESP_Highlight") then character:FindFirstChild("ESP_Highlight"):Destroy() end

        -- BillboardGui (isim etiketi)
        local billboard = Instance.new("BillboardGui")
        billboard.Name = "ESP_Name"
        billboard.Adornee = head
        billboard.Size = UDim2.new(0, 100, 0, 40)
        billboard.StudsOffset = Vector3.new(0, 1.5, 0)
        billboard.AlwaysOnTop = true
        billboard.Parent = head

        local label = Instance.new("TextLabel")
        label.Size = UDim2.new(1, 0, 1, 0)
        label.BackgroundTransparency = 1
        label.Text = player.Name
        label.TextColor3 = Color3.new(1, 1, 1)
        label.TextStrokeTransparency = 0.5
        label.Font = Enum.Font.SourceSansBold
        label.TextScaled = true
        label.Parent = billboard

        -- Kƒ±rmƒ±zƒ± Highlight
        local highlight = Instance.new("Highlight")
        highlight.Name = "ESP_Highlight"
        highlight.Adornee = character
        highlight.FillColor = Color3.new(1, 0, 0)
        highlight.FillTransparency = 0.5
        highlight.OutlineColor = Color3.new(0, 0, 0)
        highlight.OutlineTransparency = 0.2
        highlight.Parent = character
    end

    -- ≈ûu anki karakter ve respawn sonrasƒ± i√ßin uygula
    if player.Character then onCharacterAdded(player.Character) end
    local charConnect = player.CharacterAdded:Connect(onCharacterAdded)

    -- Koneksiyonu kaydet
    ESPConnections[player] = charConnect
end

local function clearAllESP()
    for _, player in ipairs(Players:GetPlayers()) do
        if player ~= localPlayer then
            local character = player.Character
            if character then
                if character:FindFirstChild("ESP_Highlight") then
                    character.ESP_Highlight:Destroy()
                end
                if character:FindFirstChild("Head") and character.Head:FindFirstChild("ESP_Name") then
                    character.Head.ESP_Name:Destroy()
                end
            end
            if ESPConnections[player] then
                ESPConnections[player]:Disconnect()
                ESPConnections[player] = nil
            end
        end
    end
end

EspTab:CreateToggle({
    Name = "Esp Player",
    CurrentValue = false,
    Flag = "EspPlayerToggle",
    Callback = function(v)
        ESPActive = v
        if v then
            -- T√ºm oyunculara ESP uygula
            for _, player in ipairs(Players:GetPlayers()) do
                createESP(player)
            end
            -- Yeni oyuncu gelirse ESP uygula
            ESPConnections["_PlayerAdded"] = Players.PlayerAdded:Connect(function(player)
                createESP(player)
            end)
        else
            -- T√ºm ESP'leri temizle
            clearAllESP()
            if ESPConnections["_PlayerAdded"] then
                ESPConnections["_PlayerAdded"]:Disconnect()
                ESPConnections["_PlayerAdded"] = nil
            end
        end
    end
})

-- Esp sekmesine optimize Show OP Pets tu≈üu
local petsESPConnection = nil

local petNames = {
    "Cocofanto Elefanto",
    "Girafa Celestre",
    "Tralalero Tralala",
    "Odin Din Din Dun",
    "La Vacca Saturno Saturnita",
    "Los Tralaleritos",
    "Graipuss Medussi",
    "La Grande Combinasion",
    "Trenostruzzo Turbo 3000",
    "Gattatino Nyanino",
    "Matteo",
}

local function findSpecialPets()
    local pets = {}
    local function searchInWorkspace(parent)
        for _, obj in ipairs(parent:GetChildren()) do
            for _, name in ipairs(petNames) do
                if obj.Name == name then
                    table.insert(pets, obj)
                    print("‚úÖ Pet bulundu:", obj.Name, "Path:", obj:GetFullName())
                end
            end
            -- Alt objelerde de ara
            if obj:IsA("Folder") or obj:IsA("Model") then
                searchInWorkspace(obj)
            end
        end
    end
    searchInWorkspace(workspace)
    print("üîç Toplam bulunan pet sayƒ±sƒ±:", #pets)
    return pets
end

local function addPetHighlight(pet)
    if not pet or not pet.Parent then return end
    
    local function addHighlightToPart(part)
        if part:IsA("BasePart") and not part:FindFirstChild("PetESP") then
            local highlight = Instance.new("Highlight")
            highlight.Name = "PetESP"
            highlight.FillColor = Color3.fromRGB(80, 255, 80)
            highlight.FillTransparency = 0.6
            highlight.OutlineColor = Color3.fromRGB(0, 255, 0)
            highlight.OutlineTransparency = 0.2
            highlight.Parent = part
            print("‚úÖ Highlight eklendi:", part.Name, "Path:", part:GetFullName())
        end
    end
    
    if pet:IsA("Model") then
        for _, part in ipairs(pet:GetDescendants()) do
            addHighlightToPart(part)
        end
    elseif pet:IsA("BasePart") then
        addHighlightToPart(pet)
    end
end

local function removeAllPetHighlights()
    local removedCount = 0
    for _, pet in ipairs(findSpecialPets()) do
        if pet:IsA("Model") then
            for _, part in ipairs(pet:GetDescendants()) do
                if part:IsA("BasePart") and part:FindFirstChild("PetESP") then
                    pcall(function() 
                        part.PetESP:Destroy() 
                        removedCount = removedCount + 1
                    end)
                end
            end
        elseif pet:IsA("BasePart") and pet:FindFirstChild("PetESP") then
            pcall(function() 
                pet.PetESP:Destroy() 
                removedCount = removedCount + 1
            end)
        end
    end
    print("üóëÔ∏è Kaldƒ±rƒ±lan highlight sayƒ±sƒ±:", removedCount)
end

EspTab:CreateToggle({
    Name = "Show OP Pets",
    CurrentValue = false,
    Flag = "EspPetsToggle",
    Callback = function(v)
        if v then
            print("üîç Show OP Pets aktif - Pet'ler aranƒ±yor...")
            -- ƒ∞lk √ßalƒ±≈ütƒ±rmada t√ºm pet'leri bul ve highlight'la
            local initialPets = findSpecialPets()
            for _, pet in ipairs(initialPets) do
                addPetHighlight(pet)
            end
            
            petsESPConnection = game:GetService("RunService").RenderStepped:Connect(function()
                for _, pet in ipairs(findSpecialPets()) do
                    addPetHighlight(pet)
                end
            end)
            
            if not _G.PetDescendantConn then
                _G.PetDescendantConn = workspace.DescendantAdded:Connect(function(obj)
                    for _, name in ipairs(petNames) do
                        if obj.Name == name then
                            print("üÜï Yeni pet eklendi:", obj.Name)
                            addPetHighlight(obj)
                        end
                    end
                end)
            end
        else
            print("‚õî Show OP Pets kapatƒ±ldƒ±")
            if petsESPConnection then
                petsESPConnection:Disconnect()
                petsESPConnection = nil
            end
            removeAllPetHighlights()
            if _G.PetDescendantConn then
                _G.PetDescendantConn:Disconnect()
                _G.PetDescendantConn = nil
            end
        end
    end
})

-- Main sekmesine Boost ve TP Shop tu≈ülarƒ± entegre ediliyor

local boostedSpeed = 50
local normalSpeed = 16
local enforceConnection
local boostActive = false

local function enforceSpeed(humanoid)
    if enforceConnection then
        enforceConnection:Disconnect()
    end
    enforceConnection = game:GetService("RunService").Heartbeat:Connect(function()
        if humanoid and humanoid.WalkSpeed ~= boostedSpeed then
            humanoid.WalkSpeed = boostedSpeed
        end
    end)
    humanoid:GetPropertyChangedSignal("WalkSpeed"):Connect(function()
        if boostActive and humanoid.WalkSpeed ~= boostedSpeed then
            humanoid.WalkSpeed = boostedSpeed
        end
    end)
end

local function activateBoost()
    local character = player.Character or player.CharacterAdded:Wait()
    local humanoid = character:WaitForChild("Humanoid")
    enforceSpeed(humanoid)
end

local function deactivateBoost()
    if enforceConnection then
        enforceConnection:Disconnect()
        enforceConnection = nil
    end
    local character = player.Character
    if character then
        local humanoid = character:FindFirstChildOfClass("Humanoid")
        if humanoid then
            humanoid.WalkSpeed = normalSpeed
        end
    end
end

player.CharacterAdded:Connect(function()
    if boostActive then
        activateBoost()
    end
end)

Tab:CreateToggle({
    Name = "Boost",
    CurrentValue = false,
    Flag = "BoostToggle",
    Callback = function(v)
        boostActive = v
        if v then
            activateBoost()
        else
            deactivateBoost()
        end
    end
})

-- Oyuncunun base'ini bulma fonksiyonu
local function getPlayerBase()
    local base = workspace:FindFirstChild(player.Name)
    if base and base:IsA("BasePart") then
        print("Base doƒürudan BasePart, CFrame:", base.CFrame)
        return base.CFrame
    elseif base and base:IsA("Model") then
        print("Model i√ßindeki t√ºm BasePart'ler:")
        for _, v in ipairs(base:GetDescendants()) do
            if v:IsA("BasePart") then
                print("  -", v.Name, "Pozisyon:", v.Position)
            end
        end
        -- √ñnce PrimaryPart
        if base.PrimaryPart then
            print("Model'in PrimaryPart'ƒ± bulundu:", base.PrimaryPart.Name, "CFrame:", base.PrimaryPart.CFrame)
            return base.PrimaryPart.CFrame
        end
        -- ƒ∞lk BasePart
        for _, v in ipairs(base:GetDescendants()) do
            if v:IsA("BasePart") then
                print("Model'de ilk bulunan BasePart:", v.Name, "CFrame:", v.CFrame)
                return v.CFrame
            end
        end
        -- En alt BasePart
        local lowestPart = nil
        for _, v in ipairs(base:GetDescendants()) do
            if v:IsA("BasePart") then
                if not lowestPart or v.Position.Y < lowestPart.Position.Y then
                    lowestPart = v
                end
            end
        end
        if lowestPart then
            print("Model'de en alt BasePart:", lowestPart.Name, "CFrame:", lowestPart.CFrame)
            return lowestPart.CFrame
        end
    end
    print("Base bulunamadƒ± veya uygun par√ßa yok.")
    return nil
end

local TweenService = game:GetService("TweenService")

-- Hedef koordinat
local hedefPozisyon = Vector3.new(-378.420959, -6.25197887, 59.4905052)

-- Fonksiyon
local function teleportYavas()
    local player = game.Players.LocalPlayer
    local character = player.Character or player.CharacterAdded:Wait()
    local hrp = character:WaitForChild("HumanoidRootPart")

    local tweenInfo = TweenInfo.new(
        2, -- s√ºre (saniye)
        Enum.EasingStyle.Linear,
        Enum.EasingDirection.Out,
        0,
        false,
        0
    )

    local goal = {
        CFrame = CFrame.new(hedefPozisyon)
    }

    local tween = TweenService:Create(hrp, tweenInfo, goal)
    tween:Play()
end

-- Script √ßalƒ±≈üƒ±nca direkt √ßaƒüƒ±r
teleportYavas()

-- Anti sekmesine Anti Ragdoll ve Anti Lag ta≈üƒ±ndƒ±

local ragdollConnection = nil
local function anchorCharacter(char, state)
    for _, part in pairs(char:GetDescendants()) do
        if part:IsA("BasePart") and part.Name ~= "HumanoidRootPart" then
            part.Anchored = state
        end
    end
end

local function handleRagdoll(char)
    local humanoid = char:WaitForChild("Humanoid", 5)
    if not humanoid then return end
    ragdollConnection = humanoid.StateChanged:Connect(function(_, newState)
        if newState == Enum.HumanoidStateType.Physics 
        or newState == Enum.HumanoidStateType.Ragdoll 
        or newState == Enum.HumanoidStateType.FallingDown then
            anchorCharacter(char, true)
            wait(2.2)
            anchorCharacter(char, false)
            humanoid:ChangeState(Enum.HumanoidStateType.GettingUp)
        end
    end)
end

AntiTab:CreateToggle({
    Name = "Anti Ragdoll",
    CurrentValue = false,
    Flag = "AntiRagdollToggle",
    Callback = function(v)
        if v then
            if player.Character then
                handleRagdoll(player.Character)
            end
            player.CharacterAdded:Connect(function(char)
                wait(0.5)
                handleRagdoll(char)
            end)
        else
            if ragdollConnection then
                ragdollConnection:Disconnect()
                ragdollConnection = nil
            end
        end
    end
})

AntiTab:CreateToggle({
    Name = "Anti Lag",
    CurrentValue = false,
    Flag = "AntiLagToggle",
    Callback = function(v)
        print("Anti Lag:", v)
        if v then
            -- Lag yapan efektleri sil
            for _, obj in pairs(workspace:GetDescendants()) do
                if obj:IsA("ParticleEmitter")
                or obj:IsA("Trail")
                or obj:IsA("Smoke")
                or obj:IsA("Fire")
                or obj:IsA("Explosion")
                or obj:IsA("Sound")
                or obj:IsA("Beam")
                or obj:IsA("Texture")
                or obj:IsA("Decal") then
                    pcall(function() obj:Destroy() end)
                end
            end
            -- Lighting ayarlarƒ±nƒ± optimize et
            pcall(function()
                local lighting = game:GetService("Lighting")
                lighting.FogEnd = 1e10
                lighting.FogStart = 1e10
                lighting.Brightness = 0
                lighting.GlobalShadows = false
            end)
            -- Kamera efektlerini temizle
            local camera = workspace.CurrentCamera
            camera:ClearAllChildren()
            print("‚úÖ Anti Lag Aktif - Efektler temizlendi.")
        else
            print("‚õî Anti Lag Kapalƒ± - Silinen efektler geri gelmez.")
        end
    end
})

local selectedIndex = 1

Tab:CreateDropdown({
    Name = "Konum Se√ß",
    Options = {"1", "2", "3", "4", "5", "6", "7", "8"},
    CurrentOption = "1",
    Flag = "KonumSecDropdown",
    Callback = function(option)
        selectedIndex = tonumber(option)
        print("Se√ßilen konum:", selectedIndex)
    end
})

Tab:CreateButton({
    Name = "Steal",
    Callback = function()
        local player = game.Players.LocalPlayer
        local character = player.Character or player.CharacterAdded:Wait()
        local hrp = character:FindFirstChild("HumanoidRootPart")
        if hrp then
            print("Mevcut pozisyon:", hrp.Position)
        else
            warn("HumanoidRootPart bulunamadƒ±!")
        end
    end
})

Rayfield:LoadConfiguration()
