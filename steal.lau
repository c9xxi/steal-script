local Rayfield = loadstring(game:HttpGet('https://sirius.menu/rayfield'))()

local Window = Rayfield:CreateWindow({
    Name = "Steal-sxx21",
    LoadingTitle = "Loading...",
    LoadingSubtitle = "Made by @sxx21",
    ConfigurationSaving = {
        Enabled = false,
        FileName = "OrnekGUIConfig"
    }
})

local Tab = Window:CreateTab("Main", 4483362458)

local EspTab = Window:CreateTab("Esp", 6031075938)

local superJumpActive = false
local godModeActive = false

local player = game.Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()
local humanoid = character:WaitForChild("Humanoid")

local function updateHumanoid()
    character = player.Character or player.CharacterAdded:Wait()
    humanoid = character:WaitForChild("Humanoid")
end

Tab:CreateToggle({
    Name = "Super Jump",
    CurrentValue = false,
    Flag = "SuperJumpToggle",
    Callback = function(Value)
        superJumpActive = Value
        local player = game.Players.LocalPlayer
        local character = player.Character or player.CharacterAdded:Wait()
        local humanoid = character:FindFirstChildOfClass("Humanoid")
        if humanoid then
            if Value then
                humanoid.JumpPower = 200
            else
                humanoid.JumpPower = 50
            end
        end
    end
})

game.Players.LocalPlayer.CharacterAdded:Connect(function(char)
    local humanoid = char:WaitForChild("Humanoid")
    if superJumpActive then
        humanoid.JumpPower = 200
    else
        humanoid.JumpPower = 50
    end
end)

-- God Mod bağlantı yönetimi
local godModeConn = nil

Tab:CreateToggle({
    Name = "God Mod",
    CurrentValue = false,
    Flag = "GodModToggle",
    Callback = function(Value)
        godModeActive = Value
        local player = game.Players.LocalPlayer
        local function setGodMode(state)
            local character = player.Character or player.CharacterAdded:Wait()
            local humanoid = character:FindFirstChildOfClass("Humanoid")
            if humanoid then
                if state then
                    humanoid.Health = math.huge
                    humanoid.MaxHealth = math.huge
                    if godModeConn then godModeConn:Disconnect() end
                    godModeConn = humanoid.HealthChanged:Connect(function()
                        if godModeActive then
                            humanoid.Health = math.huge
                        end
                    end)
                else
                    if godModeConn then godModeConn:Disconnect() end
                    godModeConn = nil
                    humanoid.MaxHealth = 100
                    humanoid.Health = 100
                end
            end
        end
        setGodMode(Value)
        if not _G.GodModCharConn then
            _G.GodModCharConn = player.CharacterAdded:Connect(function()
                if Value then
                    setGodMode(true)
                end
            end)
        end
    end
})

-- Main sekmesine Boost tuşu
local boostActive = false
local boostCharConn = nil
Tab:CreateToggle({
    Name = "Boost",
    CurrentValue = false,
    Flag = "BoostToggle",
    Callback = function(v)
        boostActive = v
        local player = game.Players.LocalPlayer
        local function setSpeed(state)
            local character = player.Character or player.CharacterAdded:Wait()
            local humanoid = character:FindFirstChildOfClass("Humanoid")
            if humanoid then
                if state then
                    humanoid.WalkSpeed = 50 -- Boost açıkken hız
                else
                    humanoid.WalkSpeed = 16 -- Normal hız
                end
            end
        end
        setSpeed(v)
        if not boostCharConn then
            boostCharConn = player.CharacterAdded:Connect(function()
                if boostActive then
                    setSpeed(true)
                end
            end)
        end
    end
})

-- Super Jump: Space tuşuna basınca ekstra zıplama
local UserInputService = game:GetService("UserInputService")

UserInputService.InputBegan:Connect(function(input, processed)
    if not processed and superJumpActive and input.KeyCode == Enum.KeyCode.Space then
        wait(0.1)
        if humanoid:GetState() == Enum.HumanoidStateType.Freefall then
            humanoid:ChangeState(Enum.HumanoidStateType.Jumping)
        end
    end
end)

-- Gelişmiş ESP fonksiyonları
local Players = game:GetService("Players")
local localPlayer = Players.LocalPlayer
local ESPConnections = {}
local ESPActive = false

local function createESP(player)
    if player == localPlayer then return end

    local function onCharacterAdded(character)
        local head = character:WaitForChild("Head", 5)
        if not head then return end

        -- Eski ESP'leri temizle
        if head:FindFirstChild("ESP_Name") then head:FindFirstChild("ESP_Name"):Destroy() end
        if character:FindFirstChild("ESP_Highlight") then character:FindFirstChild("ESP_Highlight"):Destroy() end

        -- BillboardGui (isim etiketi)
        local billboard = Instance.new("BillboardGui")
        billboard.Name = "ESP_Name"
        billboard.Adornee = head
        billboard.Size = UDim2.new(0, 100, 0, 40)
        billboard.StudsOffset = Vector3.new(0, 1.5, 0)
        billboard.AlwaysOnTop = true
        billboard.Parent = head

        local label = Instance.new("TextLabel")
        label.Size = UDim2.new(1, 0, 1, 0)
        label.BackgroundTransparency = 1
        label.Text = player.Name
        label.TextColor3 = Color3.new(1, 1, 1)
        label.TextStrokeTransparency = 0.5
        label.Font = Enum.Font.SourceSansBold
        label.TextScaled = true
        label.Parent = billboard

        -- Kırmızı Highlight
        local highlight = Instance.new("Highlight")
        highlight.Name = "ESP_Highlight"
        highlight.Adornee = character
        highlight.FillColor = Color3.new(1, 0, 0)
        highlight.FillTransparency = 0.5
        highlight.OutlineColor = Color3.new(0, 0, 0)
        highlight.OutlineTransparency = 0.2
        highlight.Parent = character
    end

    -- Şu anki karakter ve respawn sonrası için uygula
    if player.Character then onCharacterAdded(player.Character) end
    local charConnect = player.CharacterAdded:Connect(onCharacterAdded)

    -- Koneksiyonu kaydet
    ESPConnections[player] = charConnect
end

local function clearAllESP()
    for _, player in ipairs(Players:GetPlayers()) do
        if player ~= localPlayer then
            local character = player.Character
            if character then
                if character:FindFirstChild("ESP_Highlight") then
                    character.ESP_Highlight:Destroy()
                end
                if character:FindFirstChild("Head") and character.Head:FindFirstChild("ESP_Name") then
                    character.Head.ESP_Name:Destroy()
                end
            end
            if ESPConnections[player] then
                ESPConnections[player]:Disconnect()
                ESPConnections[player] = nil
            end
        end
    end
end

EspTab:CreateToggle({
    Name = "Esp Player",
    CurrentValue = false,
    Flag = "EspPlayerToggle",
    Callback = function(v)
        ESPActive = v
        if v then
            -- Tüm oyunculara ESP uygula
            for _, player in ipairs(Players:GetPlayers()) do
                createESP(player)
            end
            -- Yeni oyuncu gelirse ESP uygula
            ESPConnections["_PlayerAdded"] = Players.PlayerAdded:Connect(function(player)
                createESP(player)
            end)
        else
            -- Tüm ESP'leri temizle
            clearAllESP()
            if ESPConnections["_PlayerAdded"] then
                ESPConnections["_PlayerAdded"]:Disconnect()
                ESPConnections["_PlayerAdded"] = nil
            end
        end
    end
})

-- Esp sekmesine Esp Pets tuşu
local petsESPConnection = nil
local function findSpecialPets()
    local pets = {}
    local function checkAndAdd(obj)
        if obj:IsA("Model") or obj:IsA("Part") or obj:IsA("MeshPart") then
            if obj.Name == "Brainrot God" or obj.Name == "Secret" then
                table.insert(pets, obj)
            end
        end
    end
    for _, obj in ipairs(workspace:GetDescendants()) do
        checkAndAdd(obj)
    end
    for _, tool in ipairs(game.Players.LocalPlayer.Backpack:GetChildren()) do
        if tool:IsA("Tool") then
            for _, obj in ipairs(tool:GetDescendants()) do
                checkAndAdd(obj)
            end
        end
    end
    local char = game.Players.LocalPlayer.Character
    if char then
        for _, tool in ipairs(char:GetChildren()) do
            if tool:IsA("Tool") then
                for _, obj in ipairs(tool:GetDescendants()) do
                    checkAndAdd(obj)
                end
            end
        end
    end
    return pets
end

local function addPetHighlight(pet)
    if pet:FindFirstChild("PetESP") then return end
    local highlight = Instance.new("Highlight")
    highlight.Name = "PetESP"
    highlight.FillColor = Color3.fromRGB(80, 255, 80) -- Yumuşak yeşil
    highlight.FillTransparency = 0.6
    highlight.OutlineColor = Color3.fromRGB(0, 255, 0)
    highlight.OutlineTransparency = 0.2
    highlight.Parent = pet
end

local function removeAllPetHighlights()
    for _, pet in ipairs(findSpecialPets()) do
        local h = pet:FindFirstChild("PetESP")
        if h then h:Destroy() end
    end
end

EspTab:CreateToggle({
    Name = "Esp Pets",
    CurrentValue = false,
    Flag = "EspPetsToggle",
    Callback = function(v)
        if v then
            petsESPConnection = game:GetService("RunService").RenderStepped:Connect(function()
                for _, pet in ipairs(findSpecialPets()) do
                    if not pet:FindFirstChild("PetESP") then
                        addPetHighlight(pet)
                    end
                end
            end)
        else
            if petsESPConnection then
                petsESPConnection:Disconnect()
                petsESPConnection = nil
            end
            removeAllPetHighlights()
        end
    end
})

Rayfield:LoadConfiguration()
