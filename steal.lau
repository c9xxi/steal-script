local UserInputService = game:GetService("UserInputService")
local TweenService = game:GetService("TweenService")
local Players = game:GetService("Players")
local player = Players.LocalPlayer

-- GUI oluşturma
local ScreenGui = Instance.new("ScreenGui")
ScreenGui.Name = "StealGUI"
ScreenGui.Parent = player:WaitForChild("PlayerGui")
ScreenGui.ResetOnSpawn = false

-- Ana Frame
local MainFrame = Instance.new("Frame")
MainFrame.Name = "MainFrame"
MainFrame.Parent = ScreenGui
MainFrame.BackgroundColor3 = Color3.fromRGB(80, 50, 150)
MainFrame.Position = UDim2.new(0.5, -125, 0.5, -145)
MainFrame.Size = UDim2.new(0, 250, 0, 270)
MainFrame.BorderSizePixel = 0
MainFrame.Active = true
MainFrame.Draggable = true

-- Gradient arka plan
local Gradient = Instance.new("UIGradient")
Gradient.Color = ColorSequence.new({
    ColorSequenceKeypoint.new(0, Color3.fromRGB(30, 30, 45)),
    ColorSequenceKeypoint.new(0.5, Color3.fromRGB(25, 25, 35)),
    ColorSequenceKeypoint.new(1, Color3.fromRGB(20, 20, 30))
})
Gradient.Parent = MainFrame

-- Gölge efekti
local Shadow = Instance.new("ImageLabel")
Shadow.Name = "Shadow"
Shadow.Parent = MainFrame
Shadow.BackgroundTransparency = 1
Shadow.Image = "rbxassetid://1316045217"
Shadow.Size = UDim2.new(1, 25, 1, 25)
Shadow.Position = UDim2.new(0, -12, 0, -12)
Shadow.ZIndex = 0
Shadow.ImageColor3 = Color3.fromRGB(40, 20, 60)
Shadow.ImageTransparency = 0.4

MainFrame.ZIndex = 1

-- Sadece MainPage olacak
local MainPage = Instance.new("Frame")
MainPage.Parent = MainFrame
MainPage.BackgroundTransparency = 1
MainPage.Position = UDim2.new(0, 0, 0, 0)
MainPage.Size = UDim2.new(1, 0, 1, 0)
MainPage.ZIndex = 2

local butonlar = {
    {name = "Super Jump"},
    {name = "God Mod"},
    {name = "Boost"},
    {name = "ESP"},
    {name = "Rainbow Char"},
}
local butonlarRef = {}

for i, btn in ipairs(butonlar) do
    local box = Instance.new("TextButton")
    box.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
    box.BorderSizePixel = 0
    box.Position = UDim2.new(0.06, 0, 0.10 + (i-1)*0.15, 0)
    box.Size = UDim2.new(0, 120, 0, 32)
    box.Text = ""
    box.AutoButtonColor = false
    Instance.new("UICorner", box).CornerRadius = UDim.new(0.5, 0)
    box.Parent = MainPage

    local label = Instance.new("TextLabel")
    label.Parent = box
    label.BackgroundTransparency = 1
    label.Position = UDim2.new(0, 0, 0, 0)
    label.Size = UDim2.new(1, 0, 1, 0)
    label.Font = Enum.Font.GothamBold
    label.Text = btn.name
    label.TextColor3 = Color3.fromRGB(40, 40, 40)
    label.TextSize = 13
    label.TextXAlignment = Enum.TextXAlignment.Center
    label.TextYAlignment = Enum.TextYAlignment.Center

    -- Hover animasyonu
    local originalColor = box.BackgroundColor3
    local hoverColor = Color3.fromRGB(80, 200, 110)
    box.MouseEnter:Connect(function()
        local tween = TweenService:Create(box, TweenInfo.new(0.2, Enum.EasingStyle.Quad, Enum.EasingDirection.Out), {
            BackgroundColor3 = hoverColor,
            Size = UDim2.new(0, 130, 0, 36)
        })
        tween:Play()
    end)
    box.MouseLeave:Connect(function()
        local tween = TweenService:Create(box, TweenInfo.new(0.2, Enum.EasingStyle.Quad, Enum.EasingDirection.Out), {
            BackgroundColor3 = originalColor,
            Size = UDim2.new(0, 120, 0, 32)
        })
        tween:Play()
    end)

    butonlarRef[btn.name] = {box = box, label = label}
end

-- Değişkenler
local superJumpActive = false
local boostActive = false
local espActive = false
local jumpPower = 200
local canDoubleJump = false
local hasDoubleJumped = false
local guiVisible = true

-- Animasyon fonksiyonları
local function createHoverAnimation(button)
    local originalColor = button.BackgroundColor3
    local hoverColor = Color3.fromRGB(80, 200, 110)
    
    button.MouseEnter:Connect(function()
        local tween = TweenService:Create(button, TweenInfo.new(0.2, Enum.EasingStyle.Quad, Enum.EasingDirection.Out), {
            BackgroundColor3 = hoverColor,
            Size = UDim2.new(0.94, 0, 0.13, 0)
        })
        tween:Play()
    end)
    
    button.MouseLeave:Connect(function()
        local tween = TweenService:Create(button, TweenInfo.new(0.2, Enum.EasingStyle.Quad, Enum.EasingDirection.Out), {
            BackgroundColor3 = originalColor,
            Size = UDim2.new(0.96, 0, 0.12, 0)
        })
        tween:Play()
    end)
end

local function createPulseEffect(button)
    local pulse = TweenService:Create(button, TweenInfo.new(1.5, Enum.EasingStyle.Sine, Enum.EasingDirection.InOut, -1, true), {
        BackgroundTransparency = 0.2
    })
    return pulse
end

-- Super Jump yazısı (kutunun üstünde, tam ortalı)
local SuperJumpLabel = Instance.new("TextLabel")
SuperJumpLabel.Parent = butonlarRef["Super Jump"].box
SuperJumpLabel.BackgroundTransparency = 1
SuperJumpLabel.Position = UDim2.new(0, 0, 0, 0)
SuperJumpLabel.Size = UDim2.new(1, 0, 1, 0)
SuperJumpLabel.Font = Enum.Font.GothamBold
SuperJumpLabel.Text = "Super Jump"
SuperJumpLabel.TextColor3 = Color3.fromRGB(40, 40, 40)
SuperJumpLabel.TextSize = 13
SuperJumpLabel.TextXAlignment = Enum.TextXAlignment.Center
SuperJumpLabel.TextYAlignment = Enum.TextYAlignment.Center

-- God Mod yazısı
local GodModLabel = Instance.new("TextLabel")
GodModLabel.Parent = butonlarRef["God Mod"].box
GodModLabel.BackgroundTransparency = 1
GodModLabel.Position = UDim2.new(0, 0, 0, 0)
GodModLabel.Size = UDim2.new(1, 0, 1, 0)
GodModLabel.Font = Enum.Font.GothamBold
GodModLabel.Text = "God Mod"
GodModLabel.TextColor3 = Color3.fromRGB(40, 40, 40)
GodModLabel.TextSize = 13
GodModLabel.TextXAlignment = Enum.TextXAlignment.Center
GodModLabel.TextYAlignment = Enum.TextYAlignment.Center

-- Boost yazısı (kutunun üstünde, tam ortalı)
local BoostLabel = Instance.new("TextLabel")
BoostLabel.Parent = butonlarRef["Boost"].box
BoostLabel.BackgroundTransparency = 1
BoostLabel.Position = UDim2.new(0, 0, 0, 0)
BoostLabel.Size = UDim2.new(1, 0, 1, 0)
BoostLabel.Font = Enum.Font.GothamBold
BoostLabel.Text = "Boost"
BoostLabel.TextColor3 = Color3.fromRGB(40, 40, 40)
BoostLabel.TextSize = 13
BoostLabel.TextXAlignment = Enum.TextXAlignment.Center
BoostLabel.TextYAlignment = Enum.TextYAlignment.Center

-- Rainbow Char yazısı
local RainbowLabel = Instance.new("TextLabel")
RainbowLabel.Parent = butonlarRef["Rainbow Char"].box
RainbowLabel.BackgroundTransparency = 1
RainbowLabel.Position = UDim2.new(0, 0, 0, 0)
RainbowLabel.Size = UDim2.new(1, 0, 1, 0)
RainbowLabel.Font = Enum.Font.GothamBold
RainbowLabel.Text = "Rainbow Char"
RainbowLabel.TextColor3 = Color3.fromRGB(40, 40, 40)
RainbowLabel.TextSize = 13
RainbowLabel.TextXAlignment = Enum.TextXAlignment.Center
RainbowLabel.TextYAlignment = Enum.TextYAlignment.Center

local rainbowActive = false
local rainbowConn = nil
local originalColors = {}

local function setRainbowChar(enable)
    local char = player.Character
    if not char then return end
    if enable then
        -- Orijinal renkleri kaydet
        for _, part in ipairs(char:GetDescendants()) do
            if part:IsA("BasePart") then
                originalColors[part] = part.Color
            end
        end
        -- RGB animasyonu başlat
        local t = 0
        rainbowConn = game:GetService("RunService").RenderStepped:Connect(function(dt)
            t = t + dt
            local color = Color3.fromHSV((t*0.3)%1, 1, 1)
            for _, part in ipairs(char:GetDescendants()) do
                if part:IsA("BasePart") then
                    part.Color = color
                end
            end
        end)
    else
        -- Animasyonu durdur ve renkleri eski haline getir
        if rainbowConn then rainbowConn:Disconnect() end
        for part, color in pairs(originalColors) do
            if part and part:IsA("BasePart") then
                part.Color = color
            end
        end
        originalColors = {}
    end
end

local function toggleRainbow()
    rainbowActive = not rainbowActive
    local targetColor
    local targetTextColor
    if rainbowActive then
        targetColor = Color3.fromRGB(100, 255, 100)
        targetTextColor = Color3.fromRGB(255,255,255)
        setRainbowChar(true)
    else
        targetColor = Color3.fromRGB(255, 255, 255)
        targetTextColor = Color3.fromRGB(40,40,40)
        setRainbowChar(false)
    end
    local tween = TweenService:Create(butonlarRef["Rainbow Char"].box, TweenInfo.new(0.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out), {
        BackgroundColor3 = targetColor
    })
    tween:Play()
    local textTween = TweenService:Create(RainbowLabel, TweenInfo.new(0.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out), {
        TextColor3 = targetTextColor
    })
    textTween:Play()
end
butonlarRef["Rainbow Char"].box.MouseButton1Click:Connect(toggleRainbow)

-- Super Jump animasyonlu fonksiyon
local function toggleSuperJump()
    superJumpActive = not superJumpActive
    local targetColor
    local targetTextColor
    if superJumpActive then
        targetColor = Color3.fromRGB(100, 255, 100)
        targetTextColor = Color3.fromRGB(255,255,255)
        local char = player.Character
        if char and char:FindFirstChild("Humanoid") then
            char.Humanoid.JumpPower = jumpPower
        end
    else
        targetColor = Color3.fromRGB(255, 255, 255)
        targetTextColor = Color3.fromRGB(40,40,40)
        local char = player.Character
        if char and char:FindFirstChild("Humanoid") then
            char.Humanoid.JumpPower = 50
        end
    end
    local tween = TweenService:Create(butonlarRef["Super Jump"].box, TweenInfo.new(0.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out), {
        BackgroundColor3 = targetColor
    })
    tween:Play()
    local textTween = TweenService:Create(SuperJumpLabel, TweenInfo.new(0.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out), {
        TextColor3 = targetTextColor
    })
    textTween:Play()
end

butonlarRef["Super Jump"].box.MouseButton1Click:Connect(toggleSuperJump)

-- God Mod aktifken karakter ölümsüz olsun, kapatınca normale dönsün. HealthChanged ve Died eventleriyle uygula.
local godModActive = false
local godModConn1, godModConn2

local function enableGodMod()
    local char = player.Character or player.CharacterAdded:Wait()
    local hum = char:FindFirstChildOfClass("Humanoid")
    if not hum then return end
    hum.Health = hum.MaxHealth
    if godModConn1 then godModConn1:Disconnect() end
    if godModConn2 then godModConn2:Disconnect() end
    godModConn1 = hum.HealthChanged:Connect(function()
        if godModActive and hum.Health < hum.MaxHealth then
            hum.Health = hum.MaxHealth
        end
    end)
    godModConn2 = hum.Died:Connect(function()
        if godModActive then
            hum.Health = hum.MaxHealth
        end
    end)
end

local function disableGodMod()
    if godModConn1 then godModConn1:Disconnect() end
    if godModConn2 then godModConn2:Disconnect() end
end

local function toggleGodMod()
    godModActive = not godModActive
    local targetColor
    local targetTextColor
    if godModActive then
        targetColor = Color3.fromRGB(100, 255, 100)
        targetTextColor = Color3.fromRGB(255,255,255)
        enableGodMod()
    else
        targetColor = Color3.fromRGB(255, 255, 255)
        targetTextColor = Color3.fromRGB(40,40,40)
        disableGodMod()
    end
    local tween = TweenService:Create(butonlarRef["God Mod"].box, TweenInfo.new(0.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out), {
        BackgroundColor3 = targetColor
    })
    tween:Play()
    local textTween = TweenService:Create(GodModLabel, TweenInfo.new(0.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out), {
        TextColor3 = targetTextColor
    })
    textTween:Play()
end
butonlarRef["God Mod"].box.MouseButton1Click:Connect(toggleGodMod)

-- Karakter respawn olunca God Mod aktifse tekrar uygula
player.CharacterAdded:Connect(function()
    if godModActive then
        enableGodMod()
    end
end)

-- Boost fonksiyonu
local RunService = game:GetService("RunService")
local enforceConnection = nil

local function startEnforceSpeed()
    local character = player.Character or player.CharacterAdded:Wait()
    local humanoid = character:WaitForChild("Humanoid")

    enforceConnection = RunService.Heartbeat:Connect(function()
        if humanoid.WalkSpeed ~= 50 then
            humanoid.WalkSpeed = 50
        end
    end)

    humanoid:GetPropertyChangedSignal("WalkSpeed"):Connect(function()
        if boostActive and humanoid.WalkSpeed ~= 50 then
            humanoid.WalkSpeed = 50
        end
    end)
end

local function stopEnforceSpeed()
    if enforceConnection then
        enforceConnection:Disconnect()
        enforceConnection = nil
    end

    local char = player.Character
    if char then
        local hum = char:FindFirstChildOfClass("Humanoid")
        if hum then
            hum.WalkSpeed = 16
        end
    end
end

local function toggleBoost()
    boostActive = not boostActive
    local targetColor
    local targetTextColor
    if boostActive then
        targetColor = Color3.fromRGB(100, 255, 100)
        targetTextColor = Color3.fromRGB(255,255,255)
        startEnforceSpeed()
    else
        targetColor = Color3.fromRGB(255, 255, 255)
        targetTextColor = Color3.fromRGB(40,40,40)
        stopEnforceSpeed()
    end
    local tween = TweenService:Create(butonlarRef["Boost"].box, TweenInfo.new(0.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out), {
        BackgroundColor3 = targetColor
    })
    tween:Play()
    local textTween = TweenService:Create(BoostLabel, TweenInfo.new(0.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out), {
        TextColor3 = targetTextColor
    })
    textTween:Play()
end

butonlarRef["Boost"].box.MouseButton1Click:Connect(toggleBoost)

-- Çift zıplama
UserInputService.InputBegan:Connect(function(input, processed)
    if not superJumpActive then return end
    if processed then return end
    if input.KeyCode == Enum.KeyCode.Space then
        local char = player.Character
        if char and char:FindFirstChild("Humanoid") then
            local humanoid = char.Humanoid
            humanoid:ChangeState(Enum.HumanoidStateType.Jumping)
        end
    end
end)

-- SideMenu'daki Main tuşunu kaldır (sadece başlık kalsın)
-- ALT tuşuna basınca panel açılıp kapansın (toggle)
local guiVisible = true
UserInputService.InputBegan:Connect(function(input, processed)
    if processed then return end
    if input.KeyCode == Enum.KeyCode.LeftAlt or input.KeyCode == Enum.KeyCode.RightAlt then
        guiVisible = not guiVisible
        MainFrame.Visible = guiVisible
    end
end)
